{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPori7g89suP5/EKraaz2Oo"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Exp5 NLP basics with Built in stuff on colab\n"],"metadata":{"id":"dRvEbEUa_4Ld"}},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NWhydmmV_2j0","executionInfo":{"status":"ok","timestamp":1746377553001,"user_tz":-330,"elapsed":2198,"user":{"displayName":"DEVESH SINGH","userId":"17002761889253225406"}},"outputId":"50457fd3-c247-4dab-bded-242d37485c7f"},"outputs":[{"output_type":"stream","name":"stdout","text":[" Loaded 1957 documents across categories:\n"," Categories: ['comp.sys.mac.hardware', 'rec.sport.baseball']\n","\n","Sample article (first 300 characters):\n","\n","As a Philly fan as as a Penna. baseball fan, I'm anxious to see the\n","Penna. series.  Anyone know when it starts and where the first games\n","will be played?\n","\n","This is (I think) always good baseball (to me); and the Pirates are\n","also off to a good start. ...\n","\n","ðŸ§¹ Cleaned version of sample:\n","philly fan baseball anxious see the anyone know when starts and where the first games will this always good baseball and the pirates are also off good ...\n","\n","Data split: 1369 training, 588 testing samples\n","\n","Model Accuracy: 0.9541\n","\n","Detailed Classification Report:\n","                       precision    recall  f1-score   support\n","\n","comp.sys.mac.hardware       0.96      0.95      0.95       291\n","   rec.sport.baseball       0.95      0.96      0.95       297\n","\n","             accuracy                           0.95       588\n","            macro avg       0.95      0.95      0.95       588\n","         weighted avg       0.95      0.95      0.95       588\n","\n","\n"," Top 10 words for category 'comp.sys.mac.hardware':\n","problem, new, just, like, use, drive, does, know, apple, mac\n","\n"," Top 10 words for category 'rec.sport.baseball':\n","year, hit, players, games, team, baseball, game, like, just, think\n","\n","New Article Predictions:\n"," Text: The MacBook Pro M2 chip offers great performance for develop...\n"," Predicted Topic: comp.sys.mac.hardware\n","\n"," Text: The Yankees scored a grand slam in the bottom of the ninth i...\n"," Predicted Topic: rec.sport.baseball\n","\n","NLP classification workflow completed.\n"]}],"source":["# =====================================\n","#NLP Classifier: Tech vs Sports News\n","# =====================================\n","\n","# Step 1: Import libraries\n","import numpy as np\n","import pandas as pd\n","from sklearn.datasets import fetch_20newsgroups\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.model_selection import train_test_split\n","from sklearn.naive_bayes import MultinomialNB\n","from sklearn.metrics import accuracy_score, classification_report\n","\n","# Step 2: Load two relevant categories from 20 Newsgroups\n","categories = ['comp.sys.mac.hardware', 'rec.sport.baseball']\n","\n","news_data = fetch_20newsgroups(\n","    subset='all',\n","    categories=categories,\n","    shuffle=True,\n","    random_state=0,\n","    remove=('headers', 'footers', 'quotes')\n",")\n","\n","print(f\" Loaded {len(news_data.data)} documents across categories:\")\n","print(f\" Categories: {categories}\")\n","print(\"\\nSample article (first 300 characters):\\n\")\n","print(news_data.data[0][:300], \"...\\n\")\n","\n","# Step 3: Preprocess function\n","def clean_text(text):\n","    \"\"\"Lowercase, remove short tokens and non-alphabetic content.\"\"\"\n","    return ' '.join(word.lower() for word in text.split() if word.isalpha() and len(word) > 2)\n","\n","# Check preprocessing on a sample\n","print(\"ðŸ§¹ Cleaned version of sample:\")\n","print(clean_text(news_data.data[0])[:300], \"...\\n\")\n","\n","# Step 4: Vectorize using TF-IDF\n","vectorizer = TfidfVectorizer(\n","    max_features=1000,\n","    stop_words='english',\n","    preprocessor=clean_text\n",")\n","X = vectorizer.fit_transform(news_data.data)\n","y = news_data.target\n","\n","# Step 5: Split the dataset\n","X_train, X_test, y_train, y_test = train_test_split(\n","    X, y, test_size=0.3, random_state=42\n",")\n","print(f\"Data split: {X_train.shape[0]} training, {X_test.shape[0]} testing samples\")\n","\n","# Step 6: Train a Naive Bayes model\n","classifier = MultinomialNB()\n","classifier.fit(X_train, y_train)\n","y_pred = classifier.predict(X_test)\n","\n","# Step 7: Evaluate the model\n","acc = accuracy_score(y_test, y_pred)\n","print(f\"\\nModel Accuracy: {acc:.4f}\")\n","print(\"\\nDetailed Classification Report:\")\n","print(classification_report(y_test, y_pred, target_names=categories))\n","\n","# Step 8: Show top keywords for each class\n","def display_top_words(clf, feature_names, labels, n=10):\n","    for i, label in enumerate(labels):\n","        top_ids = np.argsort(clf.feature_log_prob_[i])[-n:]\n","        top_terms = feature_names[top_ids]\n","        print(f\"\\n Top {n} words for category '{label}':\")\n","        print(\", \".join(top_terms))\n","\n","feature_names = np.array(vectorizer.get_feature_names_out())\n","display_top_words(classifier, feature_names, categories)\n","\n","# Step 9: Predict new articles\n","new_articles = [\n","    \"The MacBook Pro M2 chip offers great performance for developers and creative professionals.\",\n","    \"The Yankees scored a grand slam in the bottom of the ninth inning to win the game.\"\n","]\n","\n","new_vectors = vectorizer.transform(new_articles)\n","new_preds = classifier.predict(new_vectors)\n","\n","print(\"\\nNew Article Predictions:\")\n","for text, pred in zip(new_articles, new_preds):\n","    print(f\" Text: {text[:60]}...\")\n","    print(f\" Predicted Topic: {categories[pred]}\\n\")\n","\n","print(\"NLP classification workflow completed.\")\n"]},{"cell_type":"markdown","source":["viva questions\n"],"metadata":{"id":"ZYpCQMTjAAow"}}]}